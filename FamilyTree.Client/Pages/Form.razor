@page "/form"
@using System.ComponentModel.DataAnnotations
@using FamilyTree.Shared.Dto

<h3>Form with Validation</h3>

<EditForm Model="_formData" OnValidSubmit="HandleValidSubmit" FormName="MainForm">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="_formData.FirstName" class="form-control"/>
        <ValidationMessage For="@(() => _formData.FirstName)"/>
    </div>
    <div>
        <label for="Surname">Surname:</label>
        <InputText id="Surname" @bind-Value="_formData.LastName" class="form-control"/>
        <ValidationMessage For="@(() => _formData.LastName)"/>
    </div>
    <div>
        <label for="birthDate">Birth Date:</label>
        <InputDate id="birthDate" @bind-Value="_formData.BirthDate" class="form-control"/>
        <ValidationMessage For="@(() => _formData.BirthDate)"/>
    </div>
    <div>
        <label for="deathDate">Death Date:</label>
        <InputDate id="deathDate" @bind-Value="_formData.DeathDate" class="form-control"/>
        <ValidationMessage For="@(() => _formData.DeathDate)"/>
    </div>
    <br/>
    <button class="btn btn-primary">Submit</button>
</EditForm>

@if (_submitted)
{
    <p>You submitted successfully!</p>
    <ul>
        <li><strong>Name:</strong> @_formData?.FirstName</li>
        <li><strong>Surname:</strong> @_formData?.LastName</li>
        <li><strong>Birth Date:</strong> @_formData?.BirthDate?.ToShortDateString()</li>
        <li><strong>Death Date:</strong> @_formData?.DeathDate?.ToShortDateString()</li>
    </ul>
}

@code {
    private FormData? _formData;
    private bool _submitted = false;

    protected override void OnInitialized()
    {
        _formData ??= new FormData();
        base.OnInitialized();
    }


    private async Task HandleValidSubmit()
    {
        _submitted = true;

        if (_formData == null)
        {
            Console.WriteLine("Error: _formData is null.");
            return;
        }

        var client = new HttpClient();
        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:7160/api/People");
        var data = new PersonDto()
        {
            FirstName = _formData.FirstName!,
            LastName = _formData.LastName!,
            BirthDate = (DateTime)_formData.BirthDate!,
            DeathDate = _formData.DeathDate,
        };
        var json = System.Text.Json.JsonSerializer.Serialize(data);
        var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        request.Content = content;
        try
        {
            var response = await client.SendAsync(request);
            response.EnsureSuccessStatusCode();
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error: {e.Message}");
            throw;
        }
    }

    public class FormData
    {
        [Required(ErrorMessage = "Name is required")]
        public string? FirstName { get; set; }

        [Required(ErrorMessage = "Surname is required")]
        public string? LastName { get; set; }

        [Required(ErrorMessage = "Birth Date is required")]
        [DataType(DataType.Date)]
        public DateTime? BirthDate { get; set; }

        [Required(ErrorMessage = "Death Date is required")]
        [DataType(DataType.Date)]
        public DateTime? DeathDate { get; set; }
    }

}