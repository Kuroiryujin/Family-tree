@page "/form"
@using System.ComponentModel.DataAnnotations

<h3>Form with Validation</h3>

<EditForm Model="formData" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="formData.Name" class="form-control" />
        <ValidationMessage For="@(() => formData.Name)" />
    </div>
    <div>
        <label for="surname">Surname:</label>
        <InputText id="surname" @bind-Value="formData.Surname" class="form-control" />
        <ValidationMessage For="@(() => formData.Surname)" />
    </div>
    <div>
        <label for="deathDate">DeathDate:</label>
        <InputDate id="deathDate" @bind-Value="formData.DeathDate" class="form-control" />
        <ValidationMessage For="@(() => formData.DeathDate)" />
    </div>
    <br />
    <button  type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (submitted)
{
    <p>You submitted successfully!</p>
    <ul>
        <li><strong>Name:</strong> @formData.Name</li>
        <li><strong>Surname:</strong> @formData.Surname</li>
        <li><strong>Death Date:</strong> @formData.DeathDate?.ToShortDateString()</li>
    </ul>
}

@code {
    private FormData formData = new();
    private bool submitted = false;

    private void HandleValidSubmit()
    {
        submitted = true;
        // Logic for handling submitted data
    }

    public class FormData
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Surname is required")]
        public string Surname { get; set; }

        [Required(ErrorMessage = "Death Date is required")]
        [DataType(DataType.Date)]
        public DateTime? DeathDate { get; set; }
    }
}